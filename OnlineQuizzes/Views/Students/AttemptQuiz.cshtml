@model OnlineQuizzes.ViewModels.AttemptQuizViewModel
@{
    ViewBag.Title = "AttemptQuiz";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<br />
<div class="panel panel-default">

    <h6 style="text-align:center" id="timer">Remaining Time: @Model.quiz.DurationOfQuiz mins</h6>

    <div class="panel-body">
        @using (Html.BeginForm("Check", "Students"))
        {
            @Html.AntiForgeryToken()

        <div class="form-horizontal">

            @for (int i = 0; i < Model.MCQQuestions.Count(); i++)
            {
                <label style="display:none">@Html.DisplayFor(modelItem => Model.StudentID))</label>
                @Html.EditorFor(model => Model.MCQQuestionsAnswers[i].Id, new { htmlAttributes = new { @class = "form-control", @Value = Model.StudentID, @readonly = true, @style = "display:none" } })

                <label style="display: none">@Html.DisplayFor(modelItem => Model.QuizID))</label>
                @Html.EditorFor(model => Model.MCQQuestionsAnswers[i].QuizId, new { htmlAttributes = new { @class = "form-control", @Value = Model.QuizID, @readonly = true, @style = "display:none" } })
                <br />

                <label style="color:red">@Html.DisplayFor(modelItem => Model.MCQQuestions[i].QuestionID) - @Html.DisplayFor(modelItem => Model.MCQQuestions[i].QuestionText)? (@Html.DisplayFor(modelItem => Model.MCQQuestions[i].GradeOfQuestion))</label>
                @Html.EditorFor(model => Model.MCQQuestionsAnswers[i].QuestionID, new { htmlAttributes = new { @class = "form-control", @Value = Model.MCQQuestions[i].QuestionID, @readonly = true, @style = "display:none" } })
                <br />
                foreach (var answer in Model.MCQAnswers)
                {
                    if (answer.QuestionID == Model.MCQQuestions[i].QuestionID)
                    {

                        <div class="checkbox">

                            <label>
                                @Html.EditorFor(model => Model.MCQQuestionsAnswers[i].Answer, new { htmlAttributes = new { @type = "checkbox", @Value = answer.FirstPossibleAnswer, @readonly = true } })
                                @Html.DisplayFor(modelItem => answer.FirstPossibleAnswer)
                            </label>
                        </div>
                        <div class="checkbox">
                            <label>
                                @Html.EditorFor(model => Model.MCQQuestionsAnswers[i].Answer, new { htmlAttributes = new { @type = "checkbox", @Value = answer.SecondPossibleAnswer, @readonly = true } })
                                @Html.DisplayFor(modelItem => answer.SecondPossibleAnswer)
                            </label>
                        </div>
                        if (answer.ThirdPossibleAnswer != null)
                        {
                            <div class="checkbox">
                                <label>
                                    @Html.EditorFor(model => Model.MCQQuestionsAnswers[i].Answer, new { htmlAttributes = new { @type = "checkbox", @Value = answer.ThirdPossibleAnswer, @readonly = true } })
                                    @Html.DisplayFor(modelItem => answer.ThirdPossibleAnswer)
                                </label>
                            </div>
                        }
                        if (answer.FourthPossibleAnswer != null)
                        {
                            <div class="checkbox">
                                <label>
                                    @Html.EditorFor(model => Model.MCQQuestionsAnswers[i].Answer, new { htmlAttributes = new { @type = "checkbox", @Value = answer.FourthPossibleAnswer, @readonly = true } })
                                    @Html.DisplayFor(modelItem => answer.FourthPossibleAnswer)
                                </label>
                            </div>
                        }
                    }
                }
            }
            @for (int i = 0; i < Model.FillQuestions.Count(); i++)
            {
                var ContinuePreviousCount = Model.MCQQuestions.Count()+1;
                <label style="display:none">@Html.DisplayFor(modelItem => Model.StudentID))</label>
                @Html.EditorFor(model => Model.QuizFillInTheBlankAnswers[i].Id, new { htmlAttributes = new { @class = "form-control", @Value = Model.StudentID, @readonly = true, @style = "display:none" } })

                <label style="display: none">@Html.DisplayFor(modelItem => Model.QuizID))</label>
                @Html.EditorFor(model => Model.QuizFillInTheBlankAnswers[i].QuizId, new { htmlAttributes = new { @class = "form-control", @Value = Model.QuizID, @readonly = true, @style = "display:none" } })
                <br />

                <br />
                <label style="color:red">@Html.DisplayFor(modelItem => Model.FillQuestions[i].QuestionID) - @Html.DisplayFor(modelItem => Model.FillQuestions[i].QuestionText)? (@Html.DisplayFor(modelItem => Model.FillQuestions[i].GradeOfQuestion))</label>
                @Html.EditorFor(model => Model.QuizFillInTheBlankAnswers[i].QuestionID, new { htmlAttributes = new { @class = "form-control", @Value = Model.FillQuestions[i].QuestionID, @readonly = true, @style = "display:none" } })
                <br />

                @Html.TextAreaFor(model => Model.QuizFillInTheBlankAnswers[i].Answer, new { cols = 35, @rows = 3 })
                @*<textarea id="Fill" name="Fill" rows="4" cols="50"></textarea>*@
            }
            
        </div>
            <div class="panel-footer" style="text-align:center">
                <input type="submit" value="Submit" class="btn btn-primary" />
            </div>
        }
    </div>
</div>

@section Scripts{
    @*<script>
            $('input[type="checkbox"]').on('change', function () {
                $('input[type="checkbox"]').not(this).prop('checked', false);
            });
        </script>*@

    <script>
        var count = @Model.quiz.DurationOfQuiz;

        var counter = setInterval(timer, 60000); //1000 will  run it every 1 min

        function timer() {
            count = count - 1;
            if (count <= 0) {
                clearInterval(counter);
                //counter ended, do something 
                
            }

            //Do code for showing the number of seconds here
            document.getElementById("timer").innerHTML ="Remaining Time: "+ count + " mins"; // watch for spelling
        }
    </script>
}

